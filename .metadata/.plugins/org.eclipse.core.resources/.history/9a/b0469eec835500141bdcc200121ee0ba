/*
 * @author	Elijah Freestone 
 *
 * Project	Project3Android
 * 
 * @class 	CPM term 1410
 * 
 * Package	com.elijahfreestone.project3android
 * 
 * Date		Oct 11, 2014
 */

package com.elijahfreestone.project3android;

import android.app.Activity;
import android.app.AlertDialog;
import android.content.Context;
import android.content.DialogInterface;
import android.content.Intent;
import android.os.Bundle;
import android.telephony.PhoneNumberFormattingTextWatcher;
import android.util.Log;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Toast;

import com.parse.GetCallback;
import com.parse.ParseException;
import com.parse.ParseObject;
import com.parse.ParseQuery;
import com.parse.SaveCallback;

// TODO: Auto-generated Javadoc
/**
 * The Class NewItemActivity handles the new items activity and saving items to Parse.
 */
public class NewItemActivity extends Activity {
	String TAG = "NewItemActivity";
	EditText nameEditText;
	EditText numberEditText;
	Button saveButton;
	String nameEntered;
	String numberEnteredString;
	long numberEnteredLong; 
	String itemName = "none";
	String itemID;
	static Context myContext;
	
	/* (non-Javadoc)
	 * @see android.app.Activity#onCreate(android.os.Bundle)
	 */ 
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_new_item);   
		
		getActionBar().setDisplayHomeAsUpEnabled(true); 
		
		myContext = this;
		 
		//Grab edit texts and button
		nameEditText = (EditText) findViewById(R.id.nameEditText);
		numberEditText = (EditText) findViewById(R.id.numberEditText);
		//Format phone number as it is being entered
		numberEditText.addTextChangedListener(new PhoneNumberFormattingTextWatcher());
		
		saveButton = (Button) findViewById(R.id.saveButton);  
		
		Intent editIntent = this.getIntent();   
		if (editIntent.getExtras() != null) {
			Log.i(TAG, "editIntent good");
			itemName = editIntent.getStringExtra("itemName");
			nameEditText.setText(itemName);
			
			String itemNumber = editIntent.getStringExtra("itemNumber");
			numberEditText.setText(itemNumber);
			
			itemID = editIntent.getStringExtra("itemID");
		}
		
		saveButton.setOnClickListener(new OnClickListener() {   
			
			@Override   
			public void onClick(View arg0) {
				nameEntered = nameEditText.getText().toString();
				numberEnteredString = numberEditText.getText().toString();
				//Remove formatting () & - from number before parseLong
				String numberNoFormat = numberEnteredString.replaceAll("[^0-9]", "");
				
				//Check that both fields contain data
				if (nameEntered.equals("") || numberEnteredString.equals("")) {
					//Create alert message string and show error alert
					String bothFieldsReq = "Both fields are required to save a contact";
					inputErrorAlert(bothFieldsReq);
				//Make sure formatted number is 13 long "(xxx)xxx-xxxx" and doesn't start with 0 or 1
				} else if (numberEnteredString.length() != 13 && numberEnteredString.charAt(1) > 1) {
					//Create alert message string and show error alert
					String phoneValidate = "Phone number must be 10 digits and first number can not be 0 or 1";
					inputErrorAlert(phoneValidate);
				} else {
					//Grab long from number string
					numberEnteredLong = Long.parseLong(numberNoFormat);
					//Check what itemName equals. None means no edit intent was sent 
					//and it's a new item being saved
					if (itemName.equalsIgnoreCase("none")) {
						Log.i(TAG, "Save clicked");
						Log.i(TAG, "Name: " + nameEntered + "\nNumber: " + numberEnteredLong);

						// Save new item to Parse. Default ACL is set in MainActivity
						ParseObject newItem = new ParseObject("newItem");
						newItem.put("Name", nameEntered);
						newItem.put("Number", numberEnteredLong);
						newItem.saveInBackground(new SaveCallback() {

							@Override
							public void done(ParseException arg0) {
								if (arg0 == null) {
									Toast.makeText(getApplicationContext(), "Item Saved!", 
											Toast.LENGTH_LONG).show();
									Intent newItemBackIntent = new Intent();
									newItemBackIntent.putExtra("newItem",
											nameEntered);
									setResult(RESULT_OK, newItemBackIntent);
									DataManager.updateSyncDates();
									finish();
								} else {
									Toast.makeText(getApplicationContext(), "An error occured, please try again",
											Toast.LENGTH_LONG).show();
								} 
							}
						}); // saveInBackground close
					} else { //Intent had data so this is an edit
						Log.i(TAG, "itemName = " + itemName);
						ParseQuery<ParseObject> editQuery = ParseQuery.getQuery("newItem");
						editQuery.getInBackground(itemID, new GetCallback<ParseObject>() {
							
							@Override
							public void done(ParseObject editObject, ParseException e) {
								if (e == null) {
									editObject.put("Name", nameEntered);
									editObject.put("Number", numberEnteredLong);
									editObject.saveInBackground(new SaveCallback() {
										
										@Override
										public void done(ParseException arg0) { 
											if (arg0 == null) {
												Toast.makeText(getApplicationContext(), "Edited Item Saved!", 
														Toast.LENGTH_LONG).show();
												Intent newItemBackIntent = new Intent();
												newItemBackIntent.putExtra("newItem",
														nameEntered);
												setResult(RESULT_OK, newItemBackIntent); 
												DataManager.updateSyncDates();
												finish();
											} else {
												Toast.makeText(getApplicationContext(), "An error occured, please try again",
														Toast.LENGTH_LONG).show();
											}
										}
									}); //saveInBackground close
								}
							}
						}); //editQuery close
					}
				}
			} 
		}); //setOnClickListener close
	} //onCreate close 
	
	/*
	 * Custom method to show input validation alerts
	 */
	public static void inputErrorAlert(String alertMessage) {
		// Create alert dialog for no connection
		AlertDialog alertDialog = new AlertDialog.Builder(myContext).create();
		alertDialog.setTitle(R.string.errorTitle);
		// Set alert message. setMessage only has a charSequence
		// version so getString must be used.
		alertDialog.setMessage(alertMessage);
		alertDialog.setButton(DialogInterface.BUTTON_POSITIVE, "OK",
				(DialogInterface.OnClickListener) null);
		alertDialog.show();
	} //noConnectionAlert close
}
